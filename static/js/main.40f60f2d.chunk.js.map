{"version":3,"sources":["components/DynamicCard/index.js","components/CardList/index.js","App.js","reportWebVitals.js","index.js"],"names":["DynamicCard","card","cardDate","title","description","buttonText","color","className","style","backgroundColor","href","defaultProps","CardList","cardInfo","id","boxtitle","boxtext","defaultcards","cards","useState","count","setcount","inputtext","useRef","length","slice","map","renderContent","onClick","current","value","replace","ref","type","text","onBlur","e","target","blur","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8uMAEMA,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAoDD,EAApDC,SAAUC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,YAAaC,EAAsBJ,EAAtBI,WAAYC,EAAUL,EAAVK,MAClD,OACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,OAAOC,MAAO,CAAEC,gBAAgB,GAAD,OAAKH,IAAnD,UACE,sBAAKC,UAAU,cAAf,UACE,6BAAKL,IACL,oBAAIK,UAAU,aAAd,SAA4BJ,OAE9B,qBAAKI,UAAU,mBAAf,SACE,mBAAGA,UAAU,YAAb,SAA0BH,MAE5B,qBAAKG,UAAU,cAAf,SACE,mBAAGG,KAAK,IAAIH,UAAU,wBAAtB,SACGF,YAQEL,IAEfA,EAAYW,aAAe,CACzBT,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,WAAY,GACZC,MAAO,IC5BT,IAAMM,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAA+CD,EAA/CC,GAAIC,EAA2CF,EAA3CE,SAAUC,EAAiCH,EAAjCG,QAASC,EAAwBJ,EAAxBI,aAAcC,EAAUL,EAAVK,MADZ,EAGPC,mBAASF,GAHF,mBAG1BG,EAH0B,KAGnBC,EAHmB,KAI3BC,EAAYC,iBAAO,MAoBzB,OACE,sBAAKhB,UAAU,OAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBQ,IACvB,qBAAKR,UAAU,YAAf,SAA4BS,IAC5B,qBAAKT,UAAU,YAAf,SAdkB,SAACW,GACrB,OAAOA,GAASA,EAAMM,QAAUJ,EAC5BF,EAAMO,MAAM,EAAGL,GAAOM,KAAI,SAACzB,GACzB,OAAO,cAAC,EAAD,CAA2BA,KAAMA,GAAfA,EAAKa,OAEhCI,EACGO,MAAM,EAAGP,EAAMM,QACfE,KAAI,SAACzB,GAAD,OAAU,cAAC,EAAD,CAAsBA,KAAMA,GAAVa,MAOTa,CAAcT,KAC1C,qBAAKX,UAAU,cAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,wBAAQA,UAAU,6BAA6BqB,QArBnC,WAClBP,EAASC,EAAUO,QAAQC,MAAMC,QAAQ,KAAM,MAoBzC,uBAGA,uBACExB,UAAU,OACVyB,IAAKV,EACLW,KAAK,OACLC,KAAMd,EACNe,OAAQ,SAACC,GAAD,OAjCL,SAACA,GACZf,EAASe,EAAEC,OAAOP,MAAMC,QAAQ,KAAM,KAgCfO,CAAKF,eAQjBxB,IAEfA,EAASD,aAAe,CACtBG,GAAI,EACJC,SAAU,GACVC,QAAS,GACTC,aAAc,EACdC,MAAO,IC3CMqB,MAVf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAUM,SAAUA,SCIb2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40f60f2d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DynamicCard = ({ card }) => {\n  const { cardDate, title, description, buttonText, color } = card;\n  return (\n    <div className=\"col-sm-4\">\n      <div className=\"card\" style={{ backgroundColor: `${color}` }}>\n        <div className=\"card-header\">\n          <h5>{cardDate}</h5>\n          <h1 className=\"card-title\">{title}</h1>\n        </div>\n        <div className=\"card-body scroll\">\n          <p className=\"card-text\">{description}</p>\n        </div>\n        <div className=\"card-footer\">\n          <a href=\"/\" className=\"btn btn-outline-light\">\n            {buttonText}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DynamicCard;\n\nDynamicCard.defaultProps = {\n  cardDate: \"\",\n  title: \"\",\n  description: \"\",\n  buttonText: \"\",\n  color: \"\",\n};\n","import React, { useState, useRef } from \"react\";\nimport DynamicCard from \"../DynamicCard\";\n\nconst CardList = ({ cardInfo }) => {\n  const { id, boxtitle, boxtext, defaultcards, cards } = cardInfo;\n\n  const [count, setcount] = useState(defaultcards);\n  const inputtext = useRef(null);\n\n  const blur = (e) => {\n    setcount(e.target.value.replace(/\\D/, \"\"));\n  };\n\n  const handleClick = () => {\n    setcount(inputtext.current.value.replace(/\\D/, \"\"));\n  };\n\n  const renderContent = (cards) => {\n    return cards && cards.length >= count\n      ? cards.slice(0, count).map((card) => {\n          return <DynamicCard key={card.id} card={card} />;\n        })\n      : cards\n          .slice(0, cards.length)\n          .map((card) => <DynamicCard key={id} card={card} />);\n  };\n\n  return (\n    <div className=\"main\">\n      <h2 className=\"title\">{boxtitle}</h2>\n      <div className=\"titleinfo\">{boxtext}</div>\n      <div className=\"row cards\">{renderContent(cards)}</div>\n      <div className=\"row addcard\">\n        <div className=\"col-sm-1 col-lg-3\">\n          <button className=\"btn-outline-danger rounded\" onClick={handleClick}>\n            Read more\n          </button>\n          <input\n            className=\"text\"\n            ref={inputtext}\n            type=\"text\"\n            text={count}\n            onBlur={(e) => blur(e)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardList;\n\nCardList.defaultProps = {\n  id: 0,\n  boxtitle: \"\",\n  boxtext: \"\",\n  defaultcards: 0,\n  cards: [],\n};\n","import \"./App.scss\";\nimport cardInfo from \"./cards.json\";\nimport CardList from \"./components/CardList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <CardList cardInfo={cardInfo} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}